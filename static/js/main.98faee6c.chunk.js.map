{"version":3,"sources":["App.js","Weapons.js","index.js"],"names":["PixelPrice","BN","NearConfig","networkId","nodeUrl","contractName","walletUrl","Avocado","role","aria-label","className","Banana","Cucumber","Pepper","Berry","intToColor","c","toString","padStart","intToColorWithAlpha","a","Math","round","rgbaToInt","cr","cg","cb","ca","bgColor","bb","bg","br","imgColorToInt","int2hsv","cInt","substr","r","parseInt","g","b","v","max","min","h","transparentColor","generateGamma","hue","gammaColors","i","push","decodeLine","line","buf","Buffer","from","length","Error","pixels","color","readUInt32LE","ownerIndex","App","props","colors","map","toLowerCase","currentColor","substring","timeMs","Date","getTime","freeDrawingStartMsEstimated","OneDayMs","state","connected","signedIn","accountId","pendingPixels","boardLoaded","selectedCell","alpha","pickerColor","pickingColor","owners","accounts","highlightedAccountIndex","selectedOwnerIndex","farmingBanana","weaponsOn","weaponsCodePosition","freeDrawingStart","freeDrawingEnd","watchMode","_buttonDown","_oldCounts","_numFailedTxs","_balanceRefreshTimer","canvasRef","React","createRef","_context","_lines","_queue","_pendingPixels","_refreshBoardTimer","_sendQueueTimer","_stopRefreshTime","_accounts","_initNear","then","setState","_accountId","ircAccountId","replace","_freeDrawingStart","_freeDrawingEnd","window","location","hash","indexOf","setTimeout","enableWatchMode","canvas","this","current","getContext","click","rendering","drawImg","pickColor","saveColor","drawPixel","mouseMove","e","x","y","touches","rect","target","getBoundingClientRect","targetTouches","clientX","left","clientY","top","offsetX","offsetY","trunc","clientWidth","clientHeight","cell","JSON","stringify","renderCanvas","preventDefault","addEventListener","mouseDown","unselectCell","mouseUp","buttons","document","altKey","enablePickColor","key","disablePickColor","alert","logOut","requestSignIn","slice","_contract","draw","refreshAllowance","console","log","concat","Promise","all","refreshBoard","refreshAccountStats","forEach","p","_pending","ready","clearTimeout","_sendQueue","_pingQueue","balance","account","avocadoBalance","_isFreeDrawing","avocadoNeeded","img","imageData","w","width","height","d","Uint32Array","data","buffer","j","imgColor","account_id","accountIndex","account_index","parseFloat","avocado_balance","_pixelCost","bananaBalance","banana_balance","numPixels","num_pixels","farmingPreference","farming_preference","startTime","avocadoPixels","bananaPixels","avocadoRewardPerMs","bananaRewardPerMs","get_account","parseAccount","get_account_by_index","getAccount","clearInterval","setInterval","t","Object","assign","keyStore","nearAPI","BrowserLocalStorageKeyStore","deps","near","_keyStore","_near","_walletConnection","getAccountId","_account","viewMethods","changeMethods","get_pixel_cost","get_free_drawing_timestamp","freeDrawingTimestamp","_lineVersions","Array","fill","forced","hidden","get_line_versions","lineVersions","needLines","requestLines","lines","get_lines","results","flat","lineIndex","_refreshOwners","counts","sortedKeys","keys","sort","getAccountByIndex","ctx","fillStyle","fillRect","CellWidth","CellHeight","beginPath","strokeStyle","lineWidth","stroke","closePath","arc","PI","signOut","rgb","changeColor","hsl","newColor","index","splice","hex","hsv","amount","requiredBalance","muln","buy_tokens","select_farming_preference","berry","date","body","style","transition","backgroundColor","watchClass","isFreeDrawing","freeDrawing","initialTime","direction","timeToUpdate","lastUnit","checkpoints","time","Fragment","Days","formatValue","Hours","Minutes","Seconds","Milliseconds","content","onClick","Balance","detailed","onChange","switchBerry","checked","offColor","onColor","uncheckedIcon","checkedIcon","buyTokens","triangle","onChangeComplete","hueColorChange","marginBottom","aria-hidden","weapons","renderIt","renderImg","href","ref","Leaderboard","setHover","title","frameBorder","src","data-ribbon","Component","fraction","avacadoBalance","avocadoFarm","bananaFarm","toFixed","owner","Owner","isSelected","isHighlighted","onMouseEnter","onMouseLeave","Account","shortAccountId","Weapons","lockedAspect","sourceImage","Image","onload","clearRect","imageSmoothingQuality","drawImage","getImageData","reduce","sum","f","reader","FileReader","readAsDataURL","naturalWidth","naturalHeight","aspect","event","result","value","type","onFilesChange","onError","onFilesError","multiple","accepts","minFileSize","clickable","updateVal","changeLockedAspect","disabled","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.98faee6c.chunk.js","sourcesContent":["import \"./App.scss\";\r\nimport \"./gh-fork-ribbon.css\";\r\nimport React from \"react\";\r\nimport BN from \"bn.js\";\r\nimport * as nearAPI from \"near-api-js\";\r\nimport { GithubPicker } from \"react-color\";\r\nimport Switch from \"react-switch\";\r\nimport { Weapons } from \"./Weapons\";\r\nimport Timer from \"react-compound-timer\";\r\n\r\nconst PixelPrice = new BN(\"10000000000000000000000\");\r\n// const IsTestnet = true;\r\nconst IsMainnet = true;\r\n// window.location.hostname === \"berryclub.io\";\r\nconst TestNearConfig = {\r\n  networkId: \"testnet\",\r\n  nodeUrl: \"https://rpc.testnet.near.org\",\r\n  contractName: \"wartest8.testnet\",\r\n  walletUrl: \"https://wallet.testnet.near.org\",\r\n};\r\nconst MainNearConfig = {\r\n  networkId: \"mainnet\",\r\n  nodeUrl: \"https://rpc.mainnet.near.org\",\r\n  contractName: \"wartest8.testnet\",\r\n  walletUrl: \"https://wallet.near.org\",\r\n};\r\nconst NearConfig = IsMainnet ? TestNearConfig : MainNearConfig;\r\n\r\nconst Avocado = (\r\n  <span role=\"img\" aria-label=\"avocado\" className=\"berry\">\r\n    🥑\r\n  </span>\r\n);\r\nconst Banana = (\r\n  <span role=\"img\" aria-label=\"banana\" className=\"berry\">\r\n    🍌\r\n  </span>\r\n);\r\nconst Cucumber = (\r\n  <span role=\"img\" aria-label=\"cucumber\" className=\"berry\">\r\n    🥒\r\n  </span>\r\n);\r\nconst Pepper = (\r\n  <span role=\"img\" aria-label=\"pepper\" className=\"berry\">\r\n    🌶️\r\n  </span>\r\n);\r\n\r\nconst Berry = {\r\n  Avocado: \"Avocado\",\r\n  Banana: \"Banana\",\r\n};\r\n\r\nconst BoardHeight = 200;\r\nconst BoardWidth = 300;\r\nconst NumLinesPerFetch = 50;\r\nconst ExpectedLineLength = 4 + 8 * BoardWidth;\r\nconst CellWidth = 12;\r\nconst CellHeight = 12;\r\nconst MaxNumColors = 31;\r\nconst BatchOfPixels = 100;\r\n// 500 ms\r\nconst BatchTimeout = 500;\r\nconst RefreshBoardTimeout = 1000;\r\nconst MaxWorkTime = 10 * 60 * 1000;\r\nconst OneDayMs = 24 * 60 * 60 * 1000;\r\n\r\nconst intToColor = (c) => `#${c.toString(16).padStart(6, \"0\")}`;\r\nconst intToColorWithAlpha = (c, a) =>\r\n  `#${c.toString(16).padStart(6, \"0\")}${Math.round(255 * a)\r\n    .toString(16)\r\n    .padStart(2, \"0\")}`;\r\n\r\nconst rgbaToInt = (cr, cg, cb, ca, bgColor) => {\r\n  const bb = bgColor & 255;\r\n  const bg = (bgColor >> 8) & 255;\r\n  const br = (bgColor >> 16) & 255;\r\n\r\n  const r = Math.round(cr * ca + br * (1 - ca));\r\n  const g = Math.round(cg * ca + bg * (1 - ca));\r\n  const b = Math.round(cb * ca + bb * (1 - ca));\r\n  return (r << 16) + (g << 8) + b;\r\n};\r\n\r\nconst imgColorToInt = (c, bgColor) => {\r\n  const cr = c & 255;\r\n  const cg = (c >> 8) & 255;\r\n  const cb = (c >> 16) & 255;\r\n  const ca = ((c >> 24) & 255) / 255;\r\n  return rgbaToInt(cr, cg, cb, ca, bgColor);\r\n};\r\n\r\nconst int2hsv = (cInt) => {\r\n  cInt = intToColor(cInt).substr(1);\r\n  const r = parseInt(cInt.substr(0, 2), 16) / 255;\r\n  const g = parseInt(cInt.substr(2, 2), 16) / 255;\r\n  const b = parseInt(cInt.substr(4, 2), 16) / 255;\r\n  let v = Math.max(r, g, b),\r\n    c = v - Math.min(r, g, b);\r\n  let h =\r\n    c && (v === r ? (g - b) / c : v === g ? 2 + (b - r) / c : 4 + (r - g) / c);\r\n  return [60 * (h < 0 ? h + 6 : h), v && c / v, v];\r\n};\r\nconst transparentColor = (c, a) =>\r\n  `rgba(${c >> 16}, ${(c >> 8) & 0xff}, ${c & 0xff}, ${a})`;\r\nconst generateGamma = (hue) => {\r\n  const gammaColors = [];\r\n  for (let i = 0; i < MaxNumColors; ++i) {\r\n    gammaColors.push(`hsl(${hue}, 100%, ${(100 * i) / (MaxNumColors - 1)}%)`);\r\n  }\r\n  return gammaColors;\r\n};\r\nconst decodeLine = (line) => {\r\n  let buf = Buffer.from(line, \"base64\");\r\n  if (buf.length !== ExpectedLineLength) {\r\n    throw new Error(\"Unexpected encoded line length\");\r\n  }\r\n  let pixels = [];\r\n  for (let i = 4; i < buf.length; i += 8) {\r\n    let color = buf.readUInt32LE(i);\r\n    let ownerIndex = buf.readUInt32LE(i + 4);\r\n    pixels.push({\r\n      color,\r\n      ownerIndex,\r\n    });\r\n  }\r\n  return pixels;\r\n};\r\n\r\nconst WeaponsCheat = \"idkfa\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const colors = [\r\n      \"#000000\",\r\n      \"#666666\",\r\n      \"#aaaaaa\",\r\n      \"#FFFFFF\",\r\n      \"#F44E3B\",\r\n      \"#D33115\",\r\n      \"#9F0500\",\r\n      \"#FE9200\",\r\n      \"#E27300\",\r\n      \"#C45100\",\r\n      \"#FCDC00\",\r\n      \"#FCC400\",\r\n      \"#FB9E00\",\r\n      \"#DBDF00\",\r\n      \"#B0BC00\",\r\n      \"#808900\",\r\n      \"#A4DD00\",\r\n      \"#68BC00\",\r\n      \"#194D33\",\r\n      \"#68CCCA\",\r\n      \"#16A5A5\",\r\n      \"#0C797D\",\r\n      \"#73D8FF\",\r\n      \"#009CE0\",\r\n      \"#0062B1\",\r\n      \"#AEA1FF\",\r\n      \"#7B64FF\",\r\n      \"#653294\",\r\n      \"#FDA1FF\",\r\n      \"#FA28FF\",\r\n      \"#AB149E\",\r\n      // \"#DFDFDF\",\r\n    ].map((c) => c.toLowerCase());\r\n    // const currentColor = parseInt(colors[Math.floor(Math.random() * colors.length)].substring(1), 16);\r\n    const currentColor = parseInt(colors[0].substring(1), 16);\r\n    const defaultAlpha = 0.25;\r\n\r\n    const timeMs = new Date().getTime();\r\n    const freeDrawingStartMsEstimated =\r\n      timeMs -\r\n      ((timeMs - new Date(\"2021-05-09\")) % (7 * OneDayMs)) +\r\n      OneDayMs * 6;\r\n\r\n    this.state = {\r\n      connected: false,\r\n      signedIn: false,\r\n      accountId: null,\r\n      pendingPixels: 0,\r\n      boardLoaded: false,\r\n      selectedCell: null,\r\n      alpha: defaultAlpha,\r\n      currentColor,\r\n      pickerColor: intToColorWithAlpha(currentColor, defaultAlpha),\r\n      colors,\r\n      gammaColors: generateGamma(0),\r\n      pickingColor: false,\r\n      owners: [],\r\n      accounts: {},\r\n      highlightedAccountIndex: -1,\r\n      selectedOwnerIndex: false,\r\n      farmingBanana: false,\r\n      weaponsOn: false,\r\n      weaponsCodePosition: 0,\r\n      freeDrawingStart: new Date(freeDrawingStartMsEstimated),\r\n      freeDrawingEnd: new Date(freeDrawingStartMsEstimated + OneDayMs),\r\n      watchMode: false,\r\n    };\r\n\r\n    this._buttonDown = false;\r\n    this._oldCounts = {};\r\n    this._numFailedTxs = 0;\r\n    this._balanceRefreshTimer = null;\r\n    this.canvasRef = React.createRef();\r\n    this._context = false;\r\n    this._lines = false;\r\n    this._queue = [];\r\n    this._pendingPixels = [];\r\n    this._refreshBoardTimer = null;\r\n    this._sendQueueTimer = null;\r\n    this._stopRefreshTime = new Date().getTime() + MaxWorkTime;\r\n    this._accounts = {};\r\n\r\n    this._initNear().then(() => {\r\n      this.setState(\r\n        {\r\n          connected: true,\r\n          signedIn: !!this._accountId,\r\n          accountId: this._accountId,\r\n          ircAccountId: this._accountId.replace(\".\", \"_\"),\r\n          freeDrawingStart: this._freeDrawingStart,\r\n          freeDrawingEnd: this._freeDrawingEnd,\r\n        },\r\n        () => {\r\n          if (window.location.hash.indexOf(\"watch\") >= 0) {\r\n            setTimeout(() => this.enableWatchMode(), 500);\r\n          }\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const canvas = this.canvasRef.current;\r\n    this._context = canvas.getContext(\"2d\");\r\n\r\n    const click = async () => {\r\n      if (this.state.watchMode) {\r\n        return;\r\n      }\r\n      if (this.state.rendering) {\r\n        await this.drawImg(this.state.selectedCell);\r\n      } else if (this.state.pickingColor) {\r\n        this.pickColor(this.state.selectedCell);\r\n      } else {\r\n        this.saveColor();\r\n        await this.drawPixel(this.state.selectedCell);\r\n      }\r\n    };\r\n\r\n    const mouseMove = (e) => {\r\n      let x, y;\r\n      if (\"touches\" in e) {\r\n        if (e.touches.length > 1) {\r\n          return true;\r\n        } else {\r\n          const rect = e.target.getBoundingClientRect();\r\n          x = e.targetTouches[0].clientX - rect.left;\r\n          y = e.targetTouches[0].clientY - rect.top;\r\n        }\r\n      } else {\r\n        x = e.offsetX;\r\n        y = e.offsetY;\r\n      }\r\n      x = Math.trunc((x / e.target.clientWidth) * BoardWidth);\r\n      y = Math.trunc((y / e.target.clientHeight) * BoardHeight);\r\n      let cell = null;\r\n      if (x >= 0 && x < BoardWidth && y >= 0 && y < BoardHeight) {\r\n        cell = { x, y };\r\n      }\r\n      if (JSON.stringify(cell) !== JSON.stringify(this.state.selectedCell)) {\r\n        this.setState(\r\n          {\r\n            selectedCell: cell,\r\n            selectedOwnerIndex:\r\n              this._lines &&\r\n              cell &&\r\n              this._lines[cell.y] &&\r\n              this._lines[cell.y][cell.x].ownerIndex,\r\n          },\r\n          async () => {\r\n            this.renderCanvas();\r\n            if (this.state.selectedCell !== null && this._buttonDown) {\r\n              await click();\r\n            }\r\n          }\r\n        );\r\n      }\r\n      e.preventDefault();\r\n      return false;\r\n    };\r\n\r\n    canvas.addEventListener(\"mousemove\", mouseMove);\r\n    canvas.addEventListener(\"touchmove\", mouseMove);\r\n\r\n    const mouseDown = async (e) => {\r\n      this._buttonDown = true;\r\n      if (this.state.selectedCell !== null) {\r\n        await click();\r\n      }\r\n    };\r\n\r\n    canvas.addEventListener(\"mousedown\", mouseDown);\r\n    canvas.addEventListener(\"touchstart\", mouseDown);\r\n\r\n    const unselectCell = () => {\r\n      this.setState(\r\n        {\r\n          selectedCell: null,\r\n        },\r\n        () => this.renderCanvas()\r\n      );\r\n    };\r\n\r\n    const mouseUp = async (e) => {\r\n      this._buttonDown = false;\r\n      if (\"touches\" in e) {\r\n        unselectCell();\r\n      }\r\n    };\r\n\r\n    canvas.addEventListener(\"mouseup\", mouseUp);\r\n    canvas.addEventListener(\"touchend\", mouseUp);\r\n\r\n    canvas.addEventListener(\"mouseleave\", unselectCell);\r\n\r\n    canvas.addEventListener(\"mouseenter\", (e) => {\r\n      if (this._buttonDown) {\r\n        if (!(\"touches\" in e) && !(e.buttons & 1)) {\r\n          this._buttonDown = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    document.addEventListener(\"keydown\", (e) => {\r\n      e.altKey && this.enablePickColor();\r\n    });\r\n\r\n    document.addEventListener(\"keyup\", (e) => {\r\n      if (this.state.weaponsCodePosition < WeaponsCheat.length) {\r\n        if (\r\n          e.key.toLowerCase() === WeaponsCheat[this.state.weaponsCodePosition]\r\n        ) {\r\n          this.setState({\r\n            weaponsCodePosition: this.state.weaponsCodePosition + 1,\r\n            weaponsOn:\r\n              this.state.weaponsCodePosition + 1 === WeaponsCheat.length,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            weaponsCodePosition: 0,\r\n          });\r\n        }\r\n      }\r\n      !e.altKey && this.disablePickColor();\r\n    });\r\n  }\r\n\r\n  enablePickColor() {\r\n    this.setState(\r\n      {\r\n        pickingColor: true,\r\n      },\r\n      () => {\r\n        this.renderCanvas();\r\n      }\r\n    );\r\n  }\r\n\r\n  disablePickColor() {\r\n    this.setState(\r\n      {\r\n        pickingColor: false,\r\n      },\r\n      () => {\r\n        this.renderCanvas();\r\n      }\r\n    );\r\n  }\r\n\r\n  pickColor(cell) {\r\n    if (!this.state.signedIn || !this._lines || !this._lines[cell.y]) {\r\n      return;\r\n    }\r\n    const color = this._lines[cell.y][cell.x].color;\r\n\r\n    this.setState(\r\n      {\r\n        currentColor: color,\r\n        alpha: 1,\r\n        pickerColor: intToColorWithAlpha(color, 1),\r\n        gammaColors: generateGamma(int2hsv(color)[0]),\r\n        pickingColor: false,\r\n      },\r\n      () => {\r\n        this.renderCanvas();\r\n      }\r\n    );\r\n  }\r\n\r\n  async refreshAllowance() {\r\n    alert(\r\n      \"You're out of access key allowance. Need sign in again to refresh it\"\r\n    );\r\n    await this.logOut();\r\n    await this.requestSignIn();\r\n  }\r\n\r\n  async _sendQueue() {\r\n    const pixels = this._queue.slice(0, BatchOfPixels);\r\n    this._queue = this._queue.slice(BatchOfPixels);\r\n    this._pendingPixels = pixels;\r\n\r\n    try {\r\n      await this._contract.draw(\r\n        {\r\n          pixels,\r\n        },\r\n        new BN(\"75000000000000\")\r\n      );\r\n      this._numFailedTxs = 0;\r\n    } catch (error) {\r\n      const msg = error.toString();\r\n      if (msg.indexOf(\"does not have enough balance\") !== -1) {\r\n        await this.refreshAllowance();\r\n        return;\r\n      }\r\n      console.log(\"Failed to send a transaction\", error);\r\n      this._numFailedTxs += 1;\r\n      if (this._numFailedTxs < 3) {\r\n        this._queue = this._queue.concat(this._pendingPixels);\r\n        this._pendingPixels = [];\r\n      } else {\r\n        this._pendingPixels = [];\r\n        this._queue = [];\r\n      }\r\n    }\r\n    try {\r\n      await Promise.all([this.refreshBoard(true), this.refreshAccountStats()]);\r\n    } catch (e) {\r\n      // ignore\r\n    }\r\n    this._pendingPixels.forEach((p) => {\r\n      if (this._pending[p.y][p.x] === p.color) {\r\n        this._pending[p.y][p.x] = -1;\r\n      }\r\n    });\r\n    this._pendingPixels = [];\r\n  }\r\n\r\n  async _pingQueue(ready) {\r\n    if (this._sendQueueTimer) {\r\n      clearTimeout(this._sendQueueTimer);\r\n      this._sendQueueTimer = null;\r\n    }\r\n\r\n    if (\r\n      this._pendingPixels.length === 0 &&\r\n      (this._queue.length >= BatchOfPixels || ready)\r\n    ) {\r\n      await this._sendQueue();\r\n    }\r\n    if (this._queue.length > 0) {\r\n      this._sendQueueTimer = setTimeout(async () => {\r\n        await this._pingQueue(true);\r\n      }, BatchTimeout);\r\n    }\r\n  }\r\n\r\n  async drawImg(cell) {\r\n    if (!this.state.signedIn || !this._lines || !this._lines[cell.y]) {\r\n      return;\r\n    }\r\n    const balance = this.state.account ? this.state.account.avocadoBalance : 0;\r\n\r\n    if (\r\n      !this._isFreeDrawing() &&\r\n      balance - this.state.pendingPixels < this.state.avocadoNeeded\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const img = this.imageData;\r\n    const w = img.width;\r\n    const h = img.height;\r\n    const x = cell.x - Math.trunc(w / 2);\r\n    const y = cell.y - Math.trunc(h / 2);\r\n    const d = new Uint32Array(this.imageData.data.buffer);\r\n    for (let i = 0; i < h; ++i) {\r\n      for (let j = 0; j < w; ++j) {\r\n        const imgColor = d[i * w + j];\r\n        if (\r\n          imgColor &&\r\n          y + i >= 0 &&\r\n          y + i < BoardHeight &&\r\n          x + j >= 0 &&\r\n          x + j < BoardWidth\r\n        ) {\r\n          const bgColor = this._lines[y + i]\r\n            ? this._lines[y + i][x + j].color\r\n            : 0;\r\n          const color = imgColorToInt(imgColor, bgColor);\r\n          if (color !== bgColor) {\r\n            this._queue.push({\r\n              x: x + j,\r\n              y: y + i,\r\n              color,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.setState({\r\n      rendering: false,\r\n    });\r\n\r\n    this._stopRefreshTime = new Date().getTime() + MaxWorkTime;\r\n    await this._pingQueue(false);\r\n  }\r\n\r\n  async drawPixel(cell) {\r\n    if (!this.state.signedIn || !this._lines || !this._lines[cell.y]) {\r\n      return;\r\n    }\r\n    const balance = this.state.account ? this.state.account.avocadoBalance : 0;\r\n    if (!this._isFreeDrawing() && balance - this.state.pendingPixels < 1) {\r\n      return;\r\n    }\r\n\r\n    const bgColor = this._lines[cell.y] ? this._lines[cell.y][cell.x].color : 0;\r\n    const cb = this.state.currentColor & 255;\r\n    const cg = (this.state.currentColor >> 8) & 255;\r\n    const cr = (this.state.currentColor >> 16) & 255;\r\n    const color = rgbaToInt(cr, cg, cb, this.state.alpha, bgColor);\r\n\r\n    if (\r\n      this._pending[cell.y][cell.x] !== color &&\r\n      this._lines[cell.y][cell.x].color !== color\r\n    ) {\r\n      this._pending[cell.y][cell.x] = color;\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    this._queue.push({\r\n      x: cell.x,\r\n      y: cell.y,\r\n      color,\r\n    });\r\n\r\n    this._stopRefreshTime = new Date().getTime() + MaxWorkTime;\r\n    await this._pingQueue(false);\r\n  }\r\n\r\n  parseAccount(account, accountId) {\r\n    if (!account) {\r\n      account = {\r\n        accountId,\r\n        accountIndex: -1,\r\n        avocadoBalance: 25.0,\r\n        bananaBalance: 0.0,\r\n        numPixels: 0,\r\n        farmingPreference: Berry.Avocado,\r\n      };\r\n    } else {\r\n      account = {\r\n        accountId: account.account_id,\r\n        accountIndex: account.account_index,\r\n        avocadoBalance: parseFloat(account.avocado_balance) / this._pixelCost,\r\n        bananaBalance: parseFloat(account.banana_balance) / this._pixelCost,\r\n        numPixels: account.num_pixels,\r\n        farmingPreference: account.farming_preference,\r\n      };\r\n    }\r\n    account.startTime = new Date().getTime();\r\n    account.avocadoPixels =\r\n      account.farmingPreference === Berry.Avocado ? account.numPixels + 1 : 0;\r\n    account.bananaPixels =\r\n      account.farmingPreference === Berry.Banana ? account.numPixels : 0;\r\n    account.avocadoRewardPerMs = account.avocadoPixels / (24 * 60 * 60 * 1000);\r\n    account.bananaRewardPerMs = account.bananaPixels / (24 * 60 * 60 * 1000);\r\n    return account;\r\n  }\r\n\r\n  async getAccount(accountId) {\r\n    return this.parseAccount(\r\n      await this._contract.get_account({ account_id: accountId }),\r\n      accountId\r\n    );\r\n  }\r\n\r\n  async getAccountByIndex(accountIndex) {\r\n    return this.parseAccount(\r\n      await this._contract.get_account_by_index({\r\n        account_index: accountIndex,\r\n      }),\r\n      \"unknown\"\r\n    );\r\n  }\r\n\r\n  async refreshAccountStats() {\r\n    let account = await this.getAccount(this._accountId);\r\n    if (this._balanceRefreshTimer) {\r\n      clearInterval(this._balanceRefreshTimer);\r\n      this._balanceRefreshTimer = null;\r\n    }\r\n\r\n    this.setState({\r\n      pendingPixels: this._pendingPixels.length + this._queue.length,\r\n      farmingBanana: account.farmingPreference === Berry.Banana,\r\n      account,\r\n    });\r\n\r\n    this._balanceRefreshTimer = setInterval(() => {\r\n      const t = new Date().getTime() - account.startTime;\r\n      this.setState({\r\n        account: Object.assign({}, account, {\r\n          avocadoBalance:\r\n            account.avocadoBalance + t * account.avocadoRewardPerMs,\r\n          bananaBalance: account.bananaBalance + t * account.bananaRewardPerMs,\r\n        }),\r\n        pendingPixels: this._pendingPixels.length + this._queue.length,\r\n      });\r\n    }, 100);\r\n  }\r\n\r\n  async _initNear() {\r\n    const keyStore = new nearAPI.keyStores.BrowserLocalStorageKeyStore();\r\n    const near = await nearAPI.connect(\r\n      Object.assign({ deps: { keyStore } }, NearConfig)\r\n    );\r\n    this._keyStore = keyStore;\r\n    this._near = near;\r\n\r\n    this._walletConnection = new nearAPI.WalletConnection(\r\n      near,\r\n      NearConfig.contractName\r\n    );\r\n    this._accountId = this._walletConnection.getAccountId();\r\n\r\n    this._account = this._walletConnection.account();\r\n    this._contract = new nearAPI.Contract(\r\n      this._account,\r\n      NearConfig.contractName,\r\n      {\r\n        viewMethods: [\r\n          \"get_account\",\r\n          \"get_account_by_index\",\r\n          \"get_lines\",\r\n          \"get_line_versions\",\r\n          \"get_pixel_cost\",\r\n          \"get_account_balance\",\r\n          \"get_account_num_pixels\",\r\n          \"get_account_id_by_index\",\r\n          \"get_free_drawing_timestamp\",\r\n        ],\r\n        changeMethods: [\"draw\", \"buy_tokens\", \"select_farming_preference\"],\r\n      }\r\n    );\r\n    this._pixelCost = parseFloat(await this._contract.get_pixel_cost());\r\n    const freeDrawingTimestamp =\r\n      await this._contract.get_free_drawing_timestamp();\r\n    this._freeDrawingStart = new Date(freeDrawingTimestamp);\r\n    this._freeDrawingEnd = new Date(freeDrawingTimestamp + OneDayMs);\r\n    if (this._accountId) {\r\n      await this.refreshAccountStats();\r\n    }\r\n    this._lineVersions = Array(BoardHeight).fill(-1);\r\n    this._lines = Array(BoardHeight).fill(false);\r\n    this._pending = Array(BoardHeight).fill(false);\r\n    this._pending.forEach((v, i, a) => (a[i] = Array(BoardWidth).fill(-1)));\r\n    await this.refreshBoard(true);\r\n  }\r\n\r\n  async refreshBoard(forced) {\r\n    if (this._refreshBoardTimer) {\r\n      clearTimeout(this._refreshBoardTimer);\r\n      this._refreshBoardTimer = null;\r\n    }\r\n    const t = new Date().getTime();\r\n    if (this.state.watchMode || t < this._stopRefreshTime) {\r\n      this._refreshBoardTimer = setTimeout(async () => {\r\n        await this.refreshBoard(false);\r\n      }, RefreshBoardTimeout);\r\n    }\r\n\r\n    if (!forced && document.hidden) {\r\n      return;\r\n    }\r\n\r\n    let lineVersions = await this._contract.get_line_versions();\r\n    let needLines = [];\r\n    for (let i = 0; i < BoardHeight; ++i) {\r\n      if (lineVersions[i] !== this._lineVersions[i]) {\r\n        needLines.push(i);\r\n      }\r\n    }\r\n    let requestLines = [];\r\n    for (let i = 0; i < needLines.length; i += NumLinesPerFetch) {\r\n      requestLines.push(needLines.slice(i, i + NumLinesPerFetch));\r\n    }\r\n\r\n    let results = await Promise.all(\r\n      requestLines.map((lines) => this._contract.get_lines({ lines }))\r\n    );\r\n    results = results.flat();\r\n    requestLines = requestLines.flat();\r\n    for (let i = 0; i < requestLines.length; ++i) {\r\n      let lineIndex = requestLines[i];\r\n      let line = decodeLine(results[i]);\r\n      this._lines[lineIndex] = line;\r\n    }\r\n\r\n    this._lineVersions = lineVersions;\r\n    if (!this.state.watchMode) {\r\n      this._refreshOwners();\r\n    }\r\n    this.renderCanvas();\r\n  }\r\n\r\n  _refreshOwners() {\r\n    const counts = {};\r\n    this._lines.flat().forEach((cell) => {\r\n      counts[cell.ownerIndex] = (counts[cell.ownerIndex] || 0) + 1;\r\n    });\r\n    delete counts[0];\r\n    const sortedKeys = Object.keys(counts).sort(\r\n      (a, b) => counts[b] - counts[a]\r\n    );\r\n    this.setState({\r\n      owners: sortedKeys.map((accountIndex) => {\r\n        accountIndex = parseInt(accountIndex);\r\n        return {\r\n          accountIndex,\r\n          numPixels: counts[accountIndex],\r\n        };\r\n      }),\r\n    });\r\n    sortedKeys.forEach(async (accountIndex) => {\r\n      accountIndex = parseInt(accountIndex);\r\n      if (\r\n        !(accountIndex in this._accounts) ||\r\n        counts[accountIndex] !== (this._oldCounts[accountIndex] || 0)\r\n      ) {\r\n        try {\r\n          this._accounts[accountIndex] = await this.getAccountByIndex(\r\n            accountIndex\r\n          );\r\n        } catch (err) {\r\n          console.log(\"Failed to fetch account index #\", accountIndex, err);\r\n        }\r\n        this.setState({\r\n          accounts: Object.assign({}, this._accounts),\r\n        });\r\n      }\r\n    });\r\n    this.setState({\r\n      accounts: Object.assign({}, this._accounts),\r\n    });\r\n    this._oldCounts = counts;\r\n  }\r\n\r\n  renderCanvas() {\r\n    if (!this._context || !this._lines) {\r\n      return;\r\n    }\r\n\r\n    const ctx = this._context;\r\n\r\n    for (let i = 0; i < BoardHeight; ++i) {\r\n      const line = this._lines[i];\r\n      if (!line) {\r\n        continue;\r\n      }\r\n      for (let j = 0; j < BoardWidth; ++j) {\r\n        const p = line[j];\r\n        ctx.fillStyle = intToColor(p.color);\r\n        ctx.fillRect(j * CellWidth, i * CellHeight, CellWidth, CellHeight);\r\n        if (this.state.highlightedAccountIndex >= 0) {\r\n          if (p.ownerIndex !== this.state.highlightedAccountIndex) {\r\n            ctx.fillStyle = \"rgba(32, 32, 32, 0.8)\";\r\n            ctx.fillRect(\r\n              j * CellWidth,\r\n              i * CellHeight,\r\n              CellWidth / 2,\r\n              CellHeight / 2\r\n            );\r\n            ctx.fillRect(\r\n              (j + 0.5) * CellWidth,\r\n              (i + 0.5) * CellHeight,\r\n              CellWidth / 2,\r\n              CellHeight / 2\r\n            );\r\n            ctx.fillStyle = \"rgba(0, 0, 0, 0.8)\";\r\n            ctx.fillRect(\r\n              j * CellWidth,\r\n              (i + 0.5) * CellHeight,\r\n              CellWidth / 2,\r\n              CellHeight / 2\r\n            );\r\n            ctx.fillRect(\r\n              (j + 0.5) * CellWidth,\r\n              i * CellHeight,\r\n              CellWidth / 2,\r\n              CellHeight / 2\r\n            );\r\n          } else {\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\r\n            ctx.lineWidth = 0.5;\r\n            ctx.rect(\r\n              j * CellWidth + 0.5,\r\n              i * CellHeight + 0.5,\r\n              CellWidth - 1,\r\n              CellHeight - 1\r\n            );\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this._pendingPixels.concat(this._queue).forEach((p) => {\r\n      ctx.fillStyle = intToColor(p.color);\r\n      ctx.fillRect(p.x * CellWidth, p.y * CellHeight, CellWidth, CellHeight);\r\n    });\r\n\r\n    if (this.state.selectedCell && !this.state.watchMode) {\r\n      const c = this.state.selectedCell;\r\n      if (this.state.rendering) {\r\n        const img = this.imageData;\r\n        const w = img.width;\r\n        const h = img.height;\r\n        const x = c.x - Math.trunc(w / 2);\r\n        const y = c.y - Math.trunc(h / 2);\r\n        const d = new Uint32Array(this.imageData.data.buffer);\r\n        for (let i = 0; i < h; ++i) {\r\n          for (let j = 0; j < w; ++j) {\r\n            const color = d[i * w + j];\r\n            if (\r\n              color &&\r\n              y + i >= 0 &&\r\n              y + i < BoardHeight &&\r\n              x + j >= 0 &&\r\n              x + j < BoardWidth\r\n            ) {\r\n              const bgColor = this._lines[y + i]\r\n                ? this._lines[y + i][x + j].color\r\n                : 0;\r\n              ctx.fillStyle = intToColor(imgColorToInt(color, bgColor));\r\n              ctx.fillRect(\r\n                (x + j) * CellWidth,\r\n                (y + i) * CellHeight,\r\n                CellWidth,\r\n                CellHeight\r\n              );\r\n            }\r\n          }\r\n        }\r\n      } else if (this.state.pickingColor) {\r\n        const color = this._lines[c.y] ? this._lines[c.y][c.x].color : 0;\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = ctx.fillStyle = transparentColor(color, 0.5);\r\n        ctx.lineWidth = CellWidth * 4;\r\n        ctx.arc(\r\n          (c.x + 0.5) * CellWidth,\r\n          (c.y + 0.5) * CellHeight,\r\n          CellWidth * 4,\r\n          0,\r\n          2 * Math.PI\r\n        );\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = ctx.fillStyle = transparentColor(color, 1);\r\n        ctx.lineWidth = CellWidth * 2;\r\n        ctx.arc(\r\n          (c.x + 0.5) * CellWidth,\r\n          (c.y + 0.5) * CellHeight,\r\n          CellWidth * 4,\r\n          0,\r\n          2 * Math.PI\r\n        );\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n      } else {\r\n        ctx.fillStyle = transparentColor(this.state.currentColor, 0.2);\r\n        ctx.fillRect(c.x * CellWidth, 0, CellWidth, c.y * CellHeight);\r\n        ctx.fillRect(\r\n          c.x * CellWidth,\r\n          (c.y + 1) * CellHeight,\r\n          CellWidth,\r\n          (BoardHeight - c.y - 1) * CellHeight\r\n        );\r\n        ctx.fillRect(0, c.y * CellHeight, c.x * CellWidth, CellHeight);\r\n        ctx.fillRect(\r\n          (c.x + 1) * CellWidth,\r\n          c.y * CellHeight,\r\n          (BoardWidth - c.x - 1) * CellWidth,\r\n          CellHeight\r\n        );\r\n\r\n        ctx.beginPath();\r\n        ctx.lineWidth = 3;\r\n        ctx.fillStyle = intToColor(this.state.currentColor);\r\n        ctx.strokeStyle = intToColor(this.state.currentColor);\r\n        ctx.rect(c.x * CellWidth, c.y * CellHeight, CellWidth, CellHeight);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n      }\r\n    }\r\n\r\n    if (!this.state.boardLoaded) {\r\n      this.setState({\r\n        boardLoaded: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  async requestSignIn() {\r\n    const appTitle = \"Berry Club\";\r\n    await this._walletConnection.requestSignIn(\r\n      NearConfig.contractName,\r\n      appTitle\r\n    );\r\n  }\r\n\r\n  async logOut() {\r\n    this._walletConnection.signOut();\r\n    this._accountId = null;\r\n    this.setState({\r\n      signedIn: !!this._accountId,\r\n      accountId: this._accountId,\r\n    });\r\n  }\r\n\r\n  async alphaColorChange(c) {\r\n    this.setState(\r\n      {\r\n        alpha: c.rgb.a,\r\n      },\r\n      () => {\r\n        this.changeColor(c, c.rgb.a);\r\n      }\r\n    );\r\n  }\r\n\r\n  hueColorChange(c) {\r\n    this.setState({\r\n      gammaColors: generateGamma(c.hsl.h),\r\n    });\r\n    this.changeColor(c);\r\n  }\r\n\r\n  saveColor() {\r\n    const newColor = intToColor(this.state.currentColor);\r\n    const index = this.state.colors.indexOf(newColor);\r\n    if (index >= 0) {\r\n      this.state.colors.splice(index, 1);\r\n    }\r\n    this.setState({\r\n      colors: [newColor].concat(this.state.colors).slice(0, MaxNumColors),\r\n    });\r\n  }\r\n\r\n  changeColor(c, alpha) {\r\n    alpha = alpha || 1.0;\r\n    const currentColor = c.rgb.r * 0x010000 + c.rgb.g * 0x000100 + c.rgb.b;\r\n    c.hex = intToColorWithAlpha(currentColor, alpha);\r\n    c.rgb.a = alpha;\r\n    c.hsl.a = alpha;\r\n    c.hsv.a = alpha;\r\n    this.setState(\r\n      {\r\n        pickerColor: c,\r\n        alpha,\r\n        currentColor,\r\n      },\r\n      () => {\r\n        this.renderCanvas();\r\n      }\r\n    );\r\n  }\r\n\r\n  async buyTokens(amount) {\r\n    const requiredBalance = PixelPrice.muln(amount);\r\n    await this._contract.buy_tokens(\r\n      {},\r\n      new BN(\"30000000000000\"),\r\n      requiredBalance\r\n    );\r\n  }\r\n\r\n  setHover(accountIndex, v) {\r\n    if (v) {\r\n      this.setState(\r\n        {\r\n          highlightedAccountIndex: accountIndex,\r\n        },\r\n        () => {\r\n          this.renderCanvas();\r\n        }\r\n      );\r\n    } else if (this.state.highlightedAccountIndex === accountIndex) {\r\n      this.setState(\r\n        {\r\n          highlightedAccountIndex: -1,\r\n        },\r\n        () => {\r\n          this.renderCanvas();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  async switchBerry(farmingBanana) {\r\n    this.setState({\r\n      farmingBanana,\r\n    });\r\n    await this._contract.select_farming_preference({\r\n      berry: farmingBanana ? Berry.Banana : Berry.Avocado,\r\n    });\r\n    await this.refreshAccountStats();\r\n  }\r\n\r\n  async renderImg(img, avocadoNeeded) {\r\n    this.imageData = img;\r\n    this.setState({\r\n      weaponsOn: false,\r\n      weaponsCodePosition: 0,\r\n      rendering: true,\r\n      pickingColor: false,\r\n      avocadoNeeded,\r\n    });\r\n  }\r\n\r\n  _isFreeDrawing() {\r\n    const date = new Date();\r\n    return (\r\n      this.state.freeDrawingStart <= date && date < this.state.freeDrawingEnd\r\n    );\r\n  }\r\n\r\n  enableWatchMode() {\r\n    this.setState({\r\n      watchMode: true,\r\n      weaponsOn: false,\r\n      weaponsCodePosition: 0,\r\n    });\r\n    document.body.style.transition = \"3s\";\r\n    document.body.style.backgroundColor = \"#333\";\r\n  }\r\n\r\n  render() {\r\n    const watchClass = this.state.watchMode ? \" hidden\" : \"\";\r\n    const isFreeDrawing = this._isFreeDrawing();\r\n    const freeDrawing = (\r\n      <div\r\n        className={`free-drawing ${\r\n          isFreeDrawing ? \"free\" : \"wait\"\r\n        }${watchClass}`}\r\n      >\r\n        {isFreeDrawing\r\n          ? \"BANANZA!!! Draw for free \"\r\n          : \"Time until free drawing \"}\r\n        <Timer\r\n          initialTime={\r\n            isFreeDrawing\r\n              ? this.state.freeDrawingEnd - new Date()\r\n              : this.state.freeDrawingStart - new Date()\r\n          }\r\n          direction=\"backward\"\r\n          timeToUpdate={100}\r\n          lastUnit=\"d\"\r\n          checkpoints={[\r\n            {\r\n              time: 0,\r\n            },\r\n          ]}\r\n        >\r\n          {() => (\r\n            <React.Fragment>\r\n              <Timer.Days\r\n                formatValue={(v) => (v > 1 ? `${v} days ` : v ? `1 day ` : \"\")}\r\n              />\r\n              <Timer.Hours />:\r\n              <Timer.Minutes formatValue={(v) => `${v}`.padStart(2, \"0\")} />:\r\n              <Timer.Seconds formatValue={(v) => `${v}`.padStart(2, \"0\")} />.\r\n              <Timer.Milliseconds\r\n                formatValue={(v) => `${v}`.padStart(3, \"0\")}\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n        </Timer>\r\n      </div>\r\n    );\r\n\r\n    const content = !this.state.connected ? (\r\n      <div>\r\n        Connecting...{\" \"}\r\n        <span\r\n          className=\"spinner-grow spinner-grow-sm\"\r\n          role=\"status\"\r\n          aria-hidden=\"true\"\r\n        />\r\n      </div>\r\n    ) : this.state.signedIn ? (\r\n      <div>\r\n        <div className={`float-right${watchClass}`}>\r\n          <button\r\n            className=\"btn btn-outline-secondary\"\r\n            onClick={() => this.logOut()}\r\n          >\r\n            Log out ({this.state.accountId})\r\n          </button>\r\n        </div>\r\n        {freeDrawing}\r\n        <div className={`your-balance${watchClass}`}>\r\n          Balance:{\" \"}\r\n          <Balance\r\n            account={this.state.account}\r\n            pendingPixels={this.state.pendingPixels}\r\n            isFreeDrawing={isFreeDrawing}\r\n            detailed={true}\r\n          />\r\n          <div>\r\n            Farming preference:\r\n            <Switch\r\n              onChange={(e) => this.switchBerry(e)}\r\n              checked={this.state.farmingBanana}\r\n              className=\"react-switch\"\r\n              height={30}\r\n              width={70}\r\n              offColor=\"#666\"\r\n              onColor=\"#666\"\r\n              uncheckedIcon={\r\n                <div className=\"switch-berry avocado\">{Avocado}</div>\r\n              }\r\n              checkedIcon={<div className=\"switch-berry banana\">{Banana}</div>}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={`buttons${watchClass}`}>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => this.buyTokens(10)}\r\n          >\r\n            Buy <span className=\"font-weight-bold\">25{Avocado}</span> for{\" \"}\r\n            <span className=\"font-weight-bold\">Ⓝ0.1</span>\r\n          </button>{\" \"}\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => this.buyTokens(40)}\r\n          >\r\n            Buy <span className=\"font-weight-bold\">100{Avocado}</span> for{\" \"}\r\n            <span className=\"font-weight-bold\">Ⓝ0.4</span>\r\n          </button>{\" \"}\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => this.buyTokens(100)}\r\n          >\r\n            Buy <span className=\"font-weight-bold\">250{Avocado}</span> for{\" \"}\r\n            <span className=\"font-weight-bold\">Ⓝ1</span>\r\n          </button>{\" \"}\r\n          <button\r\n            className=\"btn btn-success\"\r\n            onClick={() => this.buyTokens(500)}\r\n          >\r\n            DEAL: Buy <span className=\"font-weight-bold\">1500{Avocado}</span>{\" \"}\r\n            for <span className=\"font-weight-bold\">Ⓝ5</span>\r\n          </button>\r\n        </div>\r\n        <div className={`color-picker${watchClass}`}>\r\n          {/* <HuePicker\r\n            color={this.state.pickerColor}\r\n            width=\"100%\"\r\n            onChange={(c) => this.hueColorChange(c)}\r\n          />\r\n          <AlphaPicker\r\n            color={this.state.pickerColor}\r\n            width=\"100%\"\r\n            onChange={(c) => this.alphaColorChange(c)}\r\n          />\r\n          <div\r\n            className={this.state.alpha >= 0.75 ? \"display-warning\" : \"hidden\"}\r\n          >\r\n            <span role=\"img\" aria-label=\"warning\">\r\n              ⚠️\r\n            </span>\r\n            ️ Please! Don't destroy art! If you just want to farm {Banana}, just\r\n            draw with low opacity.\r\n            <span role=\"img\" aria-label=\"pray\">\r\n              🙏\r\n            </span>\r\n            ️\r\n          </div> */}\r\n          <GithubPicker\r\n            className=\"circle-picker\"\r\n            colors={this.state.gammaColors}\r\n            color={this.state.pickerColor}\r\n            triangle=\"hide\"\r\n            width=\"100%\"\r\n            onChangeComplete={(c) => this.changeColor(c)}\r\n          />\r\n          <GithubPicker\r\n            className=\"circle-picker\"\r\n            colors={this.state.colors}\r\n            color={this.state.pickerColor}\r\n            triangle=\"hide\"\r\n            width=\"100%\"\r\n            onChangeComplete={(c) => this.hueColorChange(c)}\r\n          />\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div style={{ marginBottom: \"10px\" }}>\r\n        {freeDrawing}\r\n        <div>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => this.requestSignIn()}\r\n          >\r\n            Log in with NEAR Wallet\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n    const weapons = this.state.weaponsOn ? (\r\n      <div>\r\n        <Weapons\r\n          account={this.state.account}\r\n          isFreeDrawing={isFreeDrawing}\r\n          renderIt={(img, avocadoNeeded) => this.renderImg(img, avocadoNeeded)}\r\n          enableWatchMode={() => this.enableWatchMode()}\r\n        />\r\n      </div>\r\n    ) : (\r\n      \"\"\r\n    );\r\n    return (\r\n      <div>\r\n        <div className={`header${watchClass}`}>\r\n          <h2>PIXEL WARS</h2>{\" \"}\r\n          <a className=\"btn btn-outline-none\" href=\"https://farm.berryclub.io\">\r\n            Berry Farm {Cucumber}\r\n          </a>\r\n          <a\r\n            className=\"btn btn-outline-none\"\r\n            href=\"https://app.ref.finance/#wrap.near|berryclub.ek.near\"\r\n          >\r\n            REF Finance {Banana}\r\n          </a>\r\n          <a className=\"btn btn-outline-none\" href=\"https://berry.cards\">\r\n            [BETA] Berry Cards {Pepper}\r\n          </a>\r\n          {content}\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div>\r\n              <div>\r\n                <canvas\r\n                  ref={this.canvasRef}\r\n                  width={3600}\r\n                  height={2400}\r\n                  className={\r\n                    this.state.boardLoaded\r\n                      ? `pixel-board${\r\n                          this.state.watchMode ? \" watch-mode\" : \"\"\r\n                        }`\r\n                      : \"pixel-board c-animated-background\"\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className={`leaderboard${watchClass}`}>\r\n              <div>\r\n                <Leaderboard\r\n                  owners={this.state.owners}\r\n                  accounts={this.state.accounts}\r\n                  setHover={(accountIndex, v) => this.setHover(accountIndex, v)}\r\n                  selectedOwnerIndex={this.state.selectedOwnerIndex}\r\n                  highlightedAccountIndex={this.state.highlightedAccountIndex}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={`padded${watchClass}`}>\r\n          {this.state.signedIn ? (\r\n            <div>\r\n              <iframe\r\n                title=\"irc\"\r\n                className=\"irc\"\r\n                frameBorder=\"0\"\r\n                src={`https://kiwiirc.com/client/irc.kiwiirc.com/?nick=${this.state.ircAccountId}#berryclub`}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        {/*<div className={`padded${watchClass}`}>*/}\r\n        {/*  <div className=\"video-container\">*/}\r\n        {/*    <iframe*/}\r\n        {/*      title=\"youtube3\"*/}\r\n        {/*      className=\"youtube\"*/}\r\n        {/*      src=\"https://www.youtube.com/embed/wfTa-Kgw2DM\"*/}\r\n        {/*      frameBorder=\"0\"*/}\r\n        {/*      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"*/}\r\n        {/*      allowFullScreen*/}\r\n        {/*    />*/}\r\n        {/*  </div>*/}\r\n        {/*</div>*/}\r\n        {/*<div className={`padded${watchClass}`}>*/}\r\n        {/*  <div className=\"video-container\">*/}\r\n        {/*    <iframe*/}\r\n        {/*      title=\"youtube2\"*/}\r\n        {/*      className=\"youtube\"*/}\r\n        {/*      src=\"https://www.youtube.com/embed/PYF6RWd7ZgI\"*/}\r\n        {/*      frameBorder=\"0\"*/}\r\n        {/*      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"*/}\r\n        {/*      allowFullScreen*/}\r\n        {/*    />*/}\r\n        {/*  </div>*/}\r\n        {/*</div>*/}\r\n        {/*<div className={`padded${watchClass}`}>*/}\r\n        {/*  <div className=\"video-container\">*/}\r\n        {/*    <iframe*/}\r\n        {/*      title=\"youtube\"*/}\r\n        {/*      className=\"youtube\"*/}\r\n        {/*      src=\"https://www.youtube.com/embed/lMSWhCwstLo\"*/}\r\n        {/*      frameBorder=\"0\"*/}\r\n        {/*      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"*/}\r\n        {/*      allowFullScreen*/}\r\n        {/*    />*/}\r\n        {/*  </div>*/}\r\n        {/*</div>*/}\r\n        {weapons}\r\n        <a\r\n          className={`github-fork-ribbon right-bottom fixed${watchClass}`}\r\n          href=\"https://github.com/evgenykuzyakov/berryclub\"\r\n          data-ribbon=\"Fork me on GitHub\"\r\n          title=\"Fork me on GitHub\"\r\n        >\r\n          Fork me on GitHub\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Balance = (props) => {\r\n  const account = props.account;\r\n  if (!account) {\r\n    return \"\";\r\n  }\r\n  const fraction = props.detailed ? 3 : 1;\r\n  const avacadoBalance =\r\n    account.avocadoBalance -\r\n    (props.isFreeDrawing ? 0 : props.pendingPixels || 0);\r\n  const avocadoFarm =\r\n    account.avocadoPixels > 0 ? (\r\n      <span>\r\n        {\"(+\"}\r\n        <span className=\"font-weight-bold\">{account.avocadoPixels}</span>\r\n        {Avocado}\r\n        {\"/day)\"}\r\n      </span>\r\n    ) : (\r\n      \"\"\r\n    );\r\n  const bananaFarm =\r\n    account.bananaPixels > 0 ? (\r\n      <span>\r\n        {\"(+\"}\r\n        <span className=\"font-weight-bold\">{account.bananaPixels}</span>\r\n        {Banana}\r\n        {\"/day)\"}\r\n      </span>\r\n    ) : (\r\n      \"\"\r\n    );\r\n  return (\r\n    <span className=\"balances font-small\">\r\n      <span className=\"font-weight-bold\">\r\n        {avacadoBalance.toFixed(fraction)}\r\n      </span>\r\n      {Avocado}{\" \"}\r\n      <span className=\"font-weight-bold\">\r\n        {account.bananaBalance.toFixed(fraction)}\r\n      </span>\r\n      {Banana} {avocadoFarm}\r\n      {bananaFarm}\r\n      {props.pendingPixels ? <span> ({props.pendingPixels} pending)</span> : \"\"}\r\n    </span>\r\n  );\r\n};\r\n\r\nconst Leaderboard = (props) => {\r\n  const owners = props.owners.map((owner) => {\r\n    if (owner.accountIndex in props.accounts) {\r\n      owner.account = props.accounts[owner.accountIndex];\r\n    }\r\n    return (\r\n      <Owner\r\n        key={owner.accountIndex}\r\n        {...owner}\r\n        isSelected={owner.accountIndex === props.selectedOwnerIndex}\r\n        setHover={(v) => props.setHover(owner.accountIndex, v)}\r\n        isHighlighted={owner.accountIndex === props.highlightedAccountIndex}\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <table className=\"table table-hover table-sm\">\r\n      <tbody>{owners}</tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nconst Owner = (props) => {\r\n  const account = props.account;\r\n  return (\r\n    <tr\r\n      onMouseEnter={() => props.setHover(true)}\r\n      onMouseLeave={() => props.setHover(false)}\r\n      className={props.isSelected ? \"selected\" : \"\"}\r\n    >\r\n      <td>{account ? <Account accountId={account.accountId} /> : \"...\"}</td>\r\n      <td className=\"text-nowrap\">\r\n        <small>\r\n          <Balance account={account} />\r\n        </small>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst Account = (props) => {\r\n  const accountId = props.accountId;\r\n  const shortAccountId =\r\n    accountId.length > 6 + 6 + 3\r\n      ? accountId.slice(0, 6) + \"...\" + accountId.slice(-6)\r\n      : accountId;\r\n  return (\r\n    <a className=\"account\" href={`https://wayback.berryclub.io/${accountId}`}>\r\n      {shortAccountId}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import \"./Weapons.scss\";\r\nimport React from \"react\";\r\nimport Files from \"react-files\";\r\n\r\nconst Avocado = (\r\n  <span role=\"img\" aria-label=\"avocado\" className=\"berry\">\r\n    🥑\r\n  </span>\r\n);\r\n\r\nexport class Weapons extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvasRef = React.createRef();\r\n    this.state = {\r\n      width: 300,\r\n      height: 200,\r\n      avocadoNeeded: 100,\r\n      lockedAspect: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.canvas = this.canvasRef.current;\r\n    this.ctx = this.canvas.getContext(\"2d\");\r\n    this.sourceImage = new Image();\r\n    this.sourceImage.onload = () => {\r\n      this.draw();\r\n    };\r\n    this.sourceImage.src = \"/bfg.png\";\r\n  }\r\n\r\n  draw() {\r\n    const sourceImage = this.sourceImage;\r\n    const canvas = this.canvas;\r\n    const ctx = this.ctx;\r\n    const width = this.state.width;\r\n    const height = this.state.height;\r\n\r\n    // Create a canvas with the desired dimensions\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    canvas.style.width = width * 10 + \"px\";\r\n    canvas.style.height = height * 10 + \"px\";\r\n\r\n    // Scale and draw the source image to the canvas\r\n    ctx.clearRect(0, 0, width, height);\r\n    ctx.imageSmoothingQuality = \"low\";\r\n    ctx.drawImage(sourceImage, 0, 0, width, height);\r\n\r\n    const imageData = ctx.getImageData(0, 0, width, height);\r\n    this.imageData = imageData;\r\n    this.setState({\r\n      avocadoNeeded: new Uint32Array(imageData.data.buffer).reduce(\r\n        (sum, v) => sum + (v ? 1 : 0),\r\n        0\r\n      ),\r\n    });\r\n  }\r\n\r\n  async onFilesChange(f) {\r\n    const sourceImage = this.sourceImage;\r\n    let reader = new FileReader();\r\n\r\n    reader.readAsDataURL(f[0]);\r\n\r\n    sourceImage.onload = () => {\r\n      let width = sourceImage.naturalWidth;\r\n      let height = sourceImage.naturalHeight;\r\n      if (sourceImage.naturalWidth > 300 || sourceImage.naturalHeight > 200) {\r\n        const aspect = width / height;\r\n        width = Math.round(20 * Math.min(1, aspect));\r\n        height = Math.round(20 * Math.min(1, 1 / aspect));\r\n      }\r\n      this.setState({\r\n        width: Math.min(300, Math.max(1, width)),\r\n        height: Math.min(200, Math.max(1, height)),\r\n      });\r\n      this.draw();\r\n    };\r\n\r\n    reader.onload = function (event) {\r\n      sourceImage.src = event.target.result;\r\n    };\r\n  }\r\n\r\n  async onFilesError(e, f) {\r\n    console.log(e, f);\r\n  }\r\n\r\n  updateVal(key, value) {\r\n    value = Math.min(300, Math.max(1, value));\r\n    if (this.state.lockedAspect) {\r\n      const aspect =\r\n        this.sourceImage.naturalWidth / this.sourceImage.naturalHeight;\r\n      let width, height;\r\n      if (key === \"width\") {\r\n        width = value;\r\n        height = Math.round(width / aspect);\r\n      } else {\r\n        height = value;\r\n        width = Math.round(height * aspect);\r\n      }\r\n      this.setState(\r\n        {\r\n          width: Math.min(300, Math.max(1, width)),\r\n          height: Math.min(200, Math.max(1, height)),\r\n        },\r\n        () => {\r\n          this.draw();\r\n        }\r\n      );\r\n    } else {\r\n      this.setState(\r\n        {\r\n          [key]: value,\r\n        },\r\n        () => {\r\n          this.draw();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  changeLockedAspect() {\r\n    this.setState({\r\n      lockedAspect: !this.state.lockedAspect,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"weapons-popup\">\r\n        <div className=\"weapons-content\">\r\n          <h2>So you need a BFG?</h2>\r\n          <div>\r\n            <Files\r\n              type=\"button\"\r\n              className=\"btn\"\r\n              onChange={(f) => this.onFilesChange(f)}\r\n              onError={(e, f) => this.onFilesError(e, f)}\r\n              multiple={false}\r\n              accepts={[\"image/*\"]}\r\n              minFileSize={1}\r\n              clickable\r\n            >\r\n              Click to upload an image\r\n            </Files>\r\n          </div>\r\n          <div>\r\n            <label>Width</label>\r\n            <input\r\n              type=\"number\"\r\n              value={this.state.width}\r\n              min={1}\r\n              max={300}\r\n              onChange={(e) => this.updateVal(\"width\", e.target.value)}\r\n            />{\" \"}\r\n            <button\r\n              className={\r\n                \"btn btn-outline-secondary low-right-margin\" +\r\n                (this.state.lockedAspect ? \" btn-pressed\" : \" btn-not-pressed\")\r\n              }\r\n              onClick={() => this.changeLockedAspect()}\r\n            >\r\n              <span role=\"img\" aria-label=\"link\" className=\"berry\">\r\n                🔗\r\n              </span>\r\n            </button>\r\n            <label>Height</label>\r\n            <input\r\n              type=\"number\"\r\n              value={this.state.height}\r\n              min={1}\r\n              max={200}\r\n              onChange={(e) => this.updateVal(\"height\", e.target.value)}\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"btn btn-success btn-large\"\r\n            disabled={\r\n              !this.props.account ||\r\n              (!this.props.isFreeDrawing &&\r\n                this.props.account.avocadoBalance < this.state.avocadoNeeded)\r\n            }\r\n            onClick={() =>\r\n              this.props.renderIt(this.imageData, this.state.avocadoNeeded)\r\n            }\r\n          >\r\n            Render on the board using {this.state.avocadoNeeded} {Avocado}\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary btn-large\"\r\n            onClick={() => this.props.enableWatchMode()}\r\n          >\r\n            Enable watch mode\r\n          </button>\r\n          <div className=\"canvas-wrapper\">\r\n            <canvas\r\n              ref={this.canvasRef}\r\n              width={480}\r\n              height={280}\r\n              className=\"draw-preview\"\r\n            ></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}